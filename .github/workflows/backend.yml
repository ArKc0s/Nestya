name: Backend CI/CD
on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      - name: Run tests & quality checks
        run: |
          cd backend
          mvn -B verify

  build-and-deploy:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ['self-hosted', 'Linux', 'X64']
    steps:
      - uses: actions/checkout@v4

      # Ã‰TAPE DE MIGRATION DE LA BDD
      - name: Run Database Migration
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - run: |
          cd backend
          mvn flyway:migrate -Dflyway.url=${{ secrets.FLYWAY_URL }} -Dflyway.user=${{ secrets.FLYWAY_USER }} -Dflyway.password=${{ secrets.FLYWAY_PASSWORD }}

      - name: Image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Login to registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USER }} --password-stdin

      - name: Build and Push image
        run: |
          docker build -t ${{ secrets.REGISTRY_URL }}/nestya-backend:${{ steps.vars.outputs.TAG }} backend
          docker tag ${{ secrets.REGISTRY_URL }}/nestya-backend:${{ steps.vars.outputs.TAG }} ${{ secrets.REGISTRY_URL }}/nestya-backend:latest
          docker push ${{ secrets.REGISTRY_URL }}/nestya-backend --all-tags

      - name: Deploy (SSH to App VM)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.APP_SSH_HOST }}
          username: ${{ secrets.APP_SSH_USER }}
          key: ${{ secrets.APP_SSH_KEY }}
          passphrase: ${{ secrets.APP_SSH_PASSPHRASE }}
          script: |
            cd /srv/nestya
            sed -i "s/^BACKEND_TAG=.*/BACKEND_TAG=${{ steps.vars.outputs.TAG }}/" .env
            docker-compose pull backend
            docker-compose up -d --force-recreate --no-deps backend
            docker-compose ps